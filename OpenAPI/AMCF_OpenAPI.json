{
  "openapi": "3.0.3",
  "info": {
    "title": "Autodesk Machine Control Framework - API Documentation",
    "description": "This is an OpenAPI 3.0 specification of the Autodesk Machine control Framework's Server API.",
    "contact": {
      "email": "alexander.oster@autodesk.com"
    },
    "license": {
      "name": "BSD 3 clause",
      "url": "https://github.com/Autodesk/AutodeskMachineControlFramework/blob/master/LICENSE.md"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about the Autodesk Machine Control Framework on github",
    "url": "https://github.com/Autodesk/AutodeskMachineControlFramework/tree/master"
  },
  "servers": [
    {
      "url": "http://localhost:8869/api"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication flow"
    },
    {
      "name": "general",
      "description": "General API end points, data exchange"
    },
    {
      "name": "frontend",
      "description": "Frontent end point"
    },
    {
      "name": "ext",
      "description": "Application specific end points"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create a new authentication session",
        "description": "Creates a new session and starts an authentication flow with the given user name. If user does not exist, the call will not fail but return random values in order to protect the service from a discovery attack.",
        "operationId": "createAuthSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/{sessionUUID}": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Authenticate a session with the proper challenge response mechanism.",
        "description": "As second step of the authentication process, it uses the return values of a call to '/auth' and sends a computed response back in order to authenticate the session with the user's password.",
        "operationId": "authenticateSession",
        "parameters": [
          {
            "name": "sessionUUID",
            "in": "path",
            "description": "Session uuid to authenticate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "general"
        ],
        "summary": "Query the protocol version",
        "description": "Returns the version of the protocol (to be implemented)",
        "operationId": "retrieveVersion",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "general"
        ],
        "summary": "Query the full system state",
        "description": "Queries a full image of all state variables",
        "operationId": "retrieveStatus",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build": {
      "get": {
        "tags": [
          "general"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "default": "validated"
            },
            "description": "can be archived or validated"
          }
        ],
        "summary": "Retrieve build list of the system",
        "description": "Retrieves build list from server, either the build which are currently in use or have been archived.",
        "operationId": "getBuildList",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build/{buildUUID}": {
      "get": {
        "tags": [
          "general"
        ],
        "summary": "Retrieve details for a specific build",
        "operationId": "buildDetails",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "buildUUID",
            "in": "path",
            "description": "build uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "general"
        ],
        "summary": "Update metadata of a build.",
        "description": "Updates a build item's status or name.",
        "operationId": "updateBuild",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildUpdateRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "buildUUID",
            "in": "path",
            "description": "build uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "tags": [
          "general"
        ],
        "summary": "Start data upload session",
        "operationId": "startUpload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSession"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/upload/{streamUUID}": {
      "post": {
        "tags": [
          "general"
        ],
        "summary": "Upload data chunk",
        "operationId": "uploadChunk",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "streamUUID",
            "in": "path",
            "description": "stream uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "integer",
                    "description": "chunk size"
                  },
                  "offset": {
                    "type": "integer",
                    "description": "offset"
                  },
                  "data": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/upload/{streamUUID}/finish": {
      "post": {
        "tags": [
          "general"
        ],
        "summary": "Finish data upload session",
        "operationId": "finishUpload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "streamUUID",
            "in": "path",
            "description": "stream uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFinishRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
        "/download/{downloadUUID}": {
      "get": {
        "tags": [
          "general"
        ],
        "summary": "Download binary data by download ticket",
        "operationId": "Download",
        "parameters": [
          {
            "name": "downloadUUID",
            "in": "path",
            "description": "download ticket uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "image/png": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/frontend": {
      "get": {
        "tags": [
          "frontend"
        ],
        "summary": "Query the full frontend status",
        "operationId": "frontendStatus",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontendStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/frontend/pages/{pageUUID}": {
      "get": {
        "tags": [
          "frontend"
        ],
        "summary": "Query the status of a single page.",
        "operationId": "frontendPageStatus",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "pageUUID",
            "in": "path",
            "description": "Frontend Page UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontendPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/frontend/pages/{pageUUID}/subscribe": {
      "post": {
        "tags": [
          "frontend"
        ],
        "summary": "Subscribe to all attribute changes of a page.",
        "operationId": "frontendPageSubscription",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "pageUUID",
            "in": "path",
            "description": "Frontend Page UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontendSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/frontend/modules/{moduleUUID}": {
      "get": {
        "tags": [
          "frontend"
        ],
        "summary": "Query the status of a single module.",
        "operationId": "frontendModuleStatus",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "moduleUUID",
            "in": "path",
            "description": "Frontend Module UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontendModule"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }      
    },
    "/frontend/modules/{moduleUUID}/subscribe": {
      "post": {
        "tags": [
          "frontend"
        ],
        "summary": "Subscribe to attribute changes of a page.",
        "operationId": "frontendModuleStatus",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "moduleUUID",
            "in": "path",
            "description": "Frontend Module UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontendModule"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }      
    }


  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Opaque"
      }
    },
    "schemas": {
      "VersionResponse": {
        "required": [
          "protocol",
          "version"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.version' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.version"
          },
          "version": {
            "type": "string",
            "description": "Version of the protocol.",
            "example": "2.0.0"
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "protocol",
          "version"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.error' and must be verified by the client.",
             "example": "com.autodesk.machinecontrol.error"
          },
          "version": {
            "type": "string",
            "description": "Version of the protocol.",
            "example": "2.0.0"
          },
          "errorcode": {
            "type": "integer",
            "example": 123
          },
          "message": {
            "type": "string",
            "example": "Error description string"
          }
        }
      },
      "SessionRequest": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "testuser"
          }
        }
      },
      "SessionResponse": {
        "required": [
          "protocol",
          "version",
          "sessionuuid",
          "sessionkey",
          "loginsalt",
          "username"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.auth' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.auth"
          },
          "version": {
            "type": "string",
            "example": "2.0.0"
          },
          "sessionuuid": {
            "type": "string",
            "example": "9ac4f76b-0e1f-479e-8427-c15290283846"
          },
          "sessionkey": {
            "type": "string",
            "example": "ed8c0343702c3802d7061b755c0881a936330b68ed7bbc794e30b3fd90a50c69"
          },
          "loginsalt": {
            "type": "string",
            "example": "514225fcdf84f797ac586fc416e25de8a7cad16455338e5144a57e2eb3a7df25"
          },
          "username": {
            "type": "string",
            "example": "testuser"
          }
        }
      },
      "UploadSession": {
        "required": [
          "protocol",
          "version",
          "streamuuid"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.auth' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.auth"
          },
          "version": {
            "type": "string",
            "example": "2.0.0"
          },
          "streamuuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UploadResult": {
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.auth' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.auth"
          },
          "version": {
            "type": "string",
            "example": "2.0.0"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "contextuuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          },
          "mimetype": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "AuthenticationRequest": {
        "required": [
          "clientkey",
          "password"
        ],
        "type": "object",
        "properties": {
          "clientkey": {
            "type": "string",
            "example": "9b8d25dbc01f96962230884795dd7325cc877d42c2ec317009a15bd298f35ce8"
          },
          "password": {
            "type": "string",
            "example": "a83b5820446c8dbd2bcf7cb6d968bfed0b58ff7e0f1a9d61d863d7dc6d132ddd"
          }
        }
      },
      "AuthenticationResponse": {
        "required": [
          "protocol",
          "version",
          "token",
          "useruuid",
          "userlogin",
          "userrole",
          "userlanguage"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.auth' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.auth"
          },
          "version": {
            "type": "string",
            "example": "2.0.0"
          },
          "token": {
            "type": "string",
            "example": "eyJzZXNzaW9uIjoiY2Q4YjQyYjgtYTJlMS00YzE1LWFiN2ItYTc2OGVjYWUxZGMyIiwidG9rZW4iOiI3OGJjNTBlYmM3OGQ4NDA1ZmQyMDY2NTU2NDhiZmFjNDVhODUxNDVkM2Q4OWQ3Yjc0ZWEzOTYyZDhkMTE1MmUzIn0="
          },
          "useruuid": {
            "type": "string",
            "example": "bdb3e909-ce8a-4602-910d-f64d60b8b8e3"
          },
          "userlogin": {
            "type": "string",
            "example": "testuser"
          },
          "userdescription": {
            "type": "string",
            "example": "This is the default user"
          },
          "userrole": {
            "type": "string",
            "example": "administrator"
          },
          "userlanguage": {
            "type": "string",
            "example": "en"
          },
          "userpermissions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "permission_start_build"
            }
          }
        }
      },
      "BuildPart": {
        "required": [
          "uuid",
          "name"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "example": "2ab9dcb8-73c1-475c-928b-a45ccff5c0ae",
            "description": "The uuid of the part"
          },
          "geometryuuid": {
            "type": "string",
            "format": "uuid",
            "example": "2ab9dcb8-73c1-475c-928b-a45ccff5c0ae",
            "description": "The uuid of the geometry of the part. multiple parts can share the same geometry."
          },
          "name": {
            "type": "string",
            "description": "User readable name of the part",
            "example": "BOX 1"
          }
        }
      },
      "BuildLayer": {
        "required": [
          "layerindex"
        ],
        "type": "object",
        "properties": {
          "layerindex": {
            "type": "integer",
            "example": "12",
            "description": "The index of the layer in the toolpath. 0-based."
          },
          "minz": {
            "type": "number",
            "example": "1.2",
            "description": "The minimum Z value of the layer in mm"
          },
          "maxz": {
            "type": "number",
            "example": "1.3",
            "description": "The maximum Z value of the layer in mm"
          },
          "thickness": {
            "type": "number",
            "example": "0.1",
            "description": "The thickness of the layer in mm. MUST be maxz minus minz."
          }
        }
      },
      "BuildUpdateRequest": {
        "required": [
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "example": "2ab9dcb8-73c1-475c-928b-a45ccff5c0ae",
            "description": "The uuid of the build to update"
          },
          "name": {
            "type": "string",
            "description": "The new desired name of the build. If empty or omitted, name will not be updated.",
            "example": "NewBuild.3mf"
          },
          "status": {
            "type": "string",
            "description": "The new desired status of the build. If empty or omitted, status will not be updated. Allowed update pathes are from status \"validated\" to \"archived\", and \"archived\" to \"validated\". Call will fail in any other combination.",
            "example": "archived"
          }
        }
      },
      "StateMachineParameter": {
        "required": [
          "name",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Parameter",
            "example": "jobuuid"
          },
          "value": {
            "type": "string",
            "description": "The value of the Parameter",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "StateMachineParameterGroup": {
        "required": [
          "name",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Parameter Group",
            "example": "jobinfo"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateMachineParameter"
            }
          }
        }
      },
      "StateMachineInstance": {
        "required": [
          "name",
          "state",
          "parametergroups"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the State Machine instance",
            "example": "main"
          },
          "state": {
            "type": "string",
            "description": "The current state of the State Machine instance",
            "example": "idle"
          },
          "parametergroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateMachineParameterGroup"
            }
          }
        }
      },
      "StatusResponse": {
        "required": [
          "protocol",
          "version",
          "instances"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.status' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.status"
          },
          "version": {
            "type": "string",
            "description": "Version of the protocol.",
            "example": "2.0.0"
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateMachineInstance"
            }
          }
        }
      },
      "BuildJobInstance": {
        "required": [
          "name",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The UUID of the build job",
            "example": "8bf469fa-4c36-474f-8ade-8474a1d621bd"
          },
          "name": {
            "type": "string",
            "description": "The name of the build job",
            "example": "test.3mf"
          },
          "status": {
            "type": "string",
            "description": "The status of the build job. Valid values are created, validating, validated, archived, deleted",
            "example": "validated"
          },
          "storagestream": {
            "type": "string",
            "description": "The UUID of the storage stream of the job data",
            "example": "e1118949-1b6b-4c4f-83e1-a4f5e03024bb"
          },
          "size": {
            "type": "integer",
            "description": "The size of the storage stream in bytes",
            "example": 16777216
          },
          "layercount": {
            "type": "integer",
            "description": "The number of layers of the build job",
            "example": 120
          },
          "thumbnail": {
            "type": "string",
            "description": "The UUID of the thumbnail",
            "example": "8bf469fa-4c36-474f-8ade-8474a1d621bd"
          }
        }
      },

      "FrontendModule": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the frontend module",
            "example": "viewer1"
          },
          "uuid": {
            "type": "string",
            "description": "The uuid of the frontend module",
            "example": "93892df8-c5dd-486a-835f-b96fdeddd005"
          },
          "moduletype": {
            "type": "string",
            "description": "The type of the frontend module",
            "example": "viewer"
          },
          "gridcolumn": {
            "type": "integer",
            "description": "The column of the module in its parent.",
            "example": "1"
          },
          "gridrow": {
            "type": "integer",
            "description": "The row of the module in its parent.",
            "example": "2"
          },
          "gridcolumnspan": {
            "type": "integer",
            "description": "The number columns the module takes in its parent.",
            "example": "1"
          },
          "gridrowspan": {
            "type": "integer",
            "description": "The number of columns in its parent.",
            "example": "1"
          },

          "attributes": {
            "type": "object"
          },

          "submodules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrontendModule"
            },
            "example": [ ]
          }
        }
      },

      "FrontendPage": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the frontend page (must be unique for the system)",
            "example": "joblibrary"
          },
          "uuid": {
            "type": "string",
            "description": "The uuid of the frontend page",
            "example": "b68d7d3e-e3e4-44d8-af67-e65c84777dda"
          },
          "caption": {
            "type": "string",
            "description": "The caption of this frontend page (localized)",
            "example": "Job Library"
          },
          "description": {
            "type": "string",
            "description": "The description of this frontend page (localized)",
            "example": "Browse build jobs"
          },
          "icon": {
            "type": "string",
            "description": "The icon identifier for this page.",
            "example": "LibraryBig"
          },
          "gridcolumns": {
            "type": "integer",
            "description": "The number of columns on the page.",
            "example": "3"
          },
          "gridrows": {
            "type": "integer",
            "description": "The number of rows on the page",
            "example": "2"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrontendModule"
            }
          }
        }
      },

      "FrontendStatusResponse": {
        "required": [
          "protocol",
          "version"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.build' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.frontend"
          },
          "version": {
            "type": "string",
            "description": "Version of the protocol.",
            "example": "2.0.0"
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrontendPage"
            }
          }
        }
      },
      "FrontendSubscriptionResponse": {
        "required": [
          "protocol",
          "version"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.build' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.frontend"
          },
          "version": {
            "type": "string",
            "description": "Version of the protocol.",
            "example": "2.0.0"
          },
          "subscriptionuuid": {
            "type": "string",
            "description": "Subscription UUID.",
            "example": "b7800e04-9200-4015-bd35-fd4cf9e00393"
          }
        }

      },
      "BuildDetailsResponse": {
        "required": [
          "protocol",
          "version",
          "layercount",
          "parts"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.build' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.build"
          },
          "version": {
            "type": "string",
            "description": "Version of the protocol.",
            "example": "2.0.0"
          },
          "uuid": {
            "type": "string",
            "description": "The UUID of the build job",
            "example": "8bf469fa-4c36-474f-8ade-8474a1d621bd"
          },
          "name": {
            "type": "string",
            "description": "The name of the build job",
            "example": "test.3mf"
          },
          "status": {
            "type": "string",
            "description": "The status of the build job. Valid values are created, validating, validated, archived, deleted",
            "example": "validated"
          },
          "storagestream": {
            "type": "string",
            "description": "The UUID of the storage stream of the job data",
            "example": "e1118949-1b6b-4c4f-83e1-a4f5e03024bb"
          },
          "size": {
            "type": "integer",
            "description": "The size of the storage stream in bytes",
            "example": 16777216
          },
          "layercount": {
            "type": "integer",
            "description": "The number of layers of the build job",
            "example": 120
          },
          "thumbnail": {
            "type": "string",
            "description": "The UUID of the thumbnail",
            "example": "8bf469fa-4c36-474f-8ade-8474a1d621bd"
          },
          "parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildPart"
            }
          },
          "variablelayers": {
            "type": "boolean",
            "description": "If true, the layer thicknesses have variable thickness.",
            "example": false
          },
          "globallayerthickness": {
            "type": "number",
            "description": "If variablelayers is false, the global layer thickness in mm. MUST NOT be given for variable layer thicknesses",
            "example": 0.04
          },
          "layers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildLayer"
            }
          }
        }
      },
      "BuildListResponse": {
        "required": [
          "protocol",
          "version",
          "instances"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "The protocol type, used for identifying error messages. he value of this field should be 'com.autodesk.machinecontrol.build' and must be verified by the client.",
            "example": "com.autodesk.machinecontrol.build"
          },
          "version": {
            "type": "string",
            "description": "Version of the protocol.",
            "example": "2.0.0"
          },
          "buildjobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildJobInstance"
            }
          }
        }
      },
      "UploadRequest": {
        "required": [
          "name",
          "size",
          "mimetype",
          "context"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the build job",
            "example": "test.3mf"
          },
          "context": {
            "type": "string"
          },
          "mimetype": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "description": "file size",
            "example": 120
          }
        }
      },
      "UploadFinishRequest": {
        "required": [
          "streamuuid",
          "sha256",
          "context"
        ],
        "type": "object",
        "properties": {
          "streamuuid": {
            "type": "string",
            "description": "UUID of upload to finish. MUST match the upload uuid in the request URL",
            "format": "uuid"
          },
          "context": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          }
        }
      }
    }
  }
}
